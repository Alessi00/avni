# Build
spring.profiles.active=${OPENCHS_MODE:dev}
# Database
avni.database=${OPENCHS_DATABASE:openchs}
spring.datasource.url=${OPENCHS_DATABASE_URL:jdbc:postgresql://localhost:5432/${avni.database}}
spring.datasource.username=${OPENCHS_DATABASE_USER:openchs}
spring.datasource.password=${OPENCHS_DATABASE_PASSWORD:password}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
spring.datasource.tomcat.testWhileIdle=true
spring.datasource.tomcat.validationQuery=SELECT 1
spring.datasource.tomcat.jdbc-interceptors=org.avni.framework.tomcat.SetOrganisationJdbcInterceptor
#Bugsnag
avni.bugsnag.apiKey=${OPENCHS_SERVER_BUGSNAG_API_KEY:dummy}
avni.bugsnag.releaseStage=${OPENCHS_BUGSNAG_RELEASE_STAGE:development}
# Flyway
spring.flyway.schemas=public
spring.flyway.baseline-on-migrate=false
spring.flyway.out-of-order=true
# JPA, Hibernate and Spring Data
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.jadira.usertype.databaseZone=jvm
spring.jpa.properties.jadira.usertype.javaZone=jvm
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes=true
spring.jpa.properties.hibernate.dialect=org.avni.framework.postgres.CHSPostgreSQL94Dialect
spring.jpa.properties.hibernate.ejb.interceptor=org.avni.framework.hibernate.UpdateOrganisationHibernateInterceptor
spring.jpa.database-platform=org.avni.framework.postgres.CHSPostgreSQL94Dialect
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# Hibernate Search
spring.jpa.properties.hibernate.search.default.directory_provider=local-heap
# Security, Auth*
spring.security.user.name=admin
spring.security.user.password=secret
management.security.roles=SUPERUSER
cognito.clientid=${OPENCHS_CLIENT_ID:dummy}
cognito.poolid=${OPENCHS_USER_POOL:dummy}
# REST
spring.jackson.serialization.fail-on-empty-beans=false
# Application
debug=false
avni.defaultUserName=${OPENCHS_USER_NAME:admin}
spring.servlet.multipart.max-file-size=10028KB
spring.servlet.multipart.max-request-size=10028KB
avni.userPhoneNumberPattern=^\\+91[0-9]{10}
avni.connectToCognitoInDev=${OPENCHS_COGNITO_IN_DEV:false}

# Network
server.tomcat.protocol-header=x-forwarded-proto
spring.security.require-ssl=true
server.port=${OPENCHS_SERVER_PORT:8021}
server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/hal+json,application/javascript

# S3 Media
aws.accessKeyId=${OPENCHS_IAM_USER_ACCESS_KEY:dummy}
aws.secretAccessKey=${OPENCHS_IAM_USER_SECRET_ACCESS_KEY:dummy}
avni.bucketName=${OPENCHS_BUCKET_NAME:dummy}
avni.connectToS3InDev=${OPENCHS_S3_IN_DEV:false}

static.path=${OPENCHS_STATIC_PATH:/opt/openchs/static/}
analytics.path=${OPENCHS_ANALYTICS_PATH:/opt/openchs/analytics/}
spring.jackson.serialization.write-dates-as-timestamps=false
spring.batch.initialize-schema=always
spring.batch.job.enabled=false

# Node Rules Server
node.server.url=http://localhost:3000

# Msg91
msg91.server.url=https://api.msg91.com
avni.connectToMsg91InDev=${OPENCHS_MSG91_IN_DEV:false}
avni.msg91.authKey.base64EncodedEncryptionKey=${OPENCHS_MSG91_AUTHKEY_KEY:xqtzQhHsDFVQt9TK50UHcKda7/QM31bEE2lvTrcFoTU=}

# Upload
avni.skipUploadValidations=${OPENCHS_SKIP_UPLOAD_VALIDATIONS:false}
